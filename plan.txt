--- 기본 점수
working         20
idea            10

--- 기술 점수
Socket          10
SSL             20
SocketChannel   20
RMIregistry     20

--- 가산 점수
SSLEngine       20
SSLFactory      20

---  총 점수
Total           90

working(20) + idea(10) + SSLFactory(20+20) + RMI(20) = 60


* SSLFactory

* RMI


스무고개 ...
Server - GameImpl Binding /

1.  서버 시작, 클라이언트(3명) 시작
    (1) 유저 이름 입력 :
        서버 단에서 예외 처리 (rmi)
        이름 길이 검사(6자 이내) / 이름 중복 검사

    (2) 게임 시작 :
        3명 입력 완료 시(서버 내에서 카운트) -> 랜덤으로 출제자 선정 -> sendToAll ("---님이 출제자입니다!\n-님, -님 순서입니다~~...")
        (rmi-함수 내 if num == 3)

2. 게임 진행
    (1) 출제자 문제 입력 :
        stub.funcA("고양이") -> 서버 단에 정답으로 저장

    (2) 다음 순서자 입력 :
        우선 문자열로 입력을 받는다. 그 후 명령어/질문 함수(인터페이스) 호출
        - 명령어 처리 ( stub.funcB("!패스") )
          !정답 / !목록 / !패스 / !ㅁㄴ어ㅐ (예외 -> 해당 클라이언트에만 명령어목록 출력 "해당 명령어가 없습니다!\n !정답 / ..")
        - 질문 처리 ( stub.funcC("포유류인가?") )
          서버 단에 리스트 형태로 저장,
          해당 인덱스와 질문 모든 유저에게 출력 : sendToAll("[01번]--님 : 16. 포유류인가요?")
          !!만약 자기 순서가 아니다? 경고

    (3) 출제자 답변 입력 :
        예, 아니오, (그럴수도 아닐수도..)
        -> sendToAll("[출제자]--님 : 예")  &&  (2)에서 저장한 리스트에 답변 추가 - list[15] = "Q: 포유류인가요?  A: 예"

    (4) 정답 처리 :
        (2), (3) 20회 반복 후 정답 입력 -> 둘 다 정답이어야
        or !정답 입력시 정답 입력 기회




